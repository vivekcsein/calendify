name: Deploy Next.js VivekCSE site to Git Actions

on:
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
env:
  CI: true
  PNPM_CACHE_FOLDER: .pnpm-store

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        #install nodejs
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.10.0 # Change to your desired Node.js version
        #install pnpm globally
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}, .next/cache
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}-nextjs-${{ hashFiles('**/next.config.js') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build Next.js
        run: pnpm run build

      # Deployment job
      - name: Deploy to GitHub Pages
        run: |
          echo "DEPLOY_URL=https://$GITHUB_ACTOR.github.io/$GITHUB_REPOSITORY/" >> $GITHUB_ENV
          echo "COMMIT_MSG=chore: deploy to GitHub Pages at commit $GITHUB_SHA" >> $GITHUB_ENV
          echo "GIT_EMAIL=$GITHUB_ACTOR@users.noreply.github.com" >> $GITHUB_ENV
          echo "GIT_USER=$GITHUB_ACTOR" >> $GITHUB_ENV
          echo "BUILD_DIR=out" >> $GITHUB_ENV

          git init
          git config user.name "$GIT_USER"
          git config user.email "$GIT_EMAIL"
          git remote add origin https://x-access-token:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git
          git checkout -b gh-pages
          git add -A
          git commit -m "$COMMIT_MSG"
          git push origin gh-pages --force
